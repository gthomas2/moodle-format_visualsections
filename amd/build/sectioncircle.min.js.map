{"version":3,"sources":["../src/sectioncircle.js"],"names":["define","$","applySegments","each","subtopics","data","progress","strokeColor","setProgress","createSegments","sectionCircle","perc","progCircle","find","radius","attr","dasharr","Math","PI","createSvgArc","x","y","r","startAngle","endAngle","s","largeArc","cos","sin","join","imageHtml","rectSize","typeCode","link","output","segments","percMult","length","arcsEl","empty","appendTo","html","angle","phi","typecode"],"mappings":"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","sourcesContent":["define(['jquery'], function($) {\n    return {\n        applySegments: function() {\n            $(function() {\n\n                $('.section-circle svg').each(function() {\n                    const subtopics = $(this).data('subtopicsjson');\n                    const progress = $(this).data('progress');\n                    const strokeColor = $(this).data('stroke');\n                    setProgress(this, progress);\n                    createSegments(this, subtopics, strokeColor);\n                });\n\n                function setProgress(sectionCircle, perc) {\n                    var progCircle = $(sectionCircle).find('.progress');\n                    var radius = $(progCircle).attr('r');\n                    var dasharr = 2 * Math.PI * radius;\n                    var dashoffset = dasharr * (1 - (perc / 100));\n                    $(progCircle).attr('stroke-dasharray', dasharr)\n                        .attr('stroke-dashoffset', dashoffset);\n                }\n\n                function createSvgArc(x, y, r, startAngle, endAngle) {\n                    if (startAngle > endAngle) {\n                        var s = startAngle;\n                        startAngle = endAngle;\n                        endAngle = s;\n                    }\n                    if (endAngle - startAngle > Math.PI * 2) {\n                        endAngle = Math.PI * 1.99999;\n                    }\n\n                    var largeArc = endAngle - startAngle <= Math.PI ? 0 : 1;\n\n                    return [\n                        \"M\",\n                        x,\n                        y,\n                        \"L\",\n                        x + Math.cos(startAngle) * r,\n                        y - Math.sin(startAngle) * r,\n                        \"A\",\n                        r,\n                        r,\n                        0,\n                        largeArc,\n                        0,\n                        x + Math.cos(endAngle) * r,\n                        y - Math.sin(endAngle) * r,\n                        \"L\",\n                        x,\n                        y\n                    ].join(\" \") + \" Z\";\n                }\n\n                function imageHtml(x, y, rectSize, typeCode, link) {\n                    let output = `<rect x=\"${x}\" y=\"${y}\" width=\"${rectSize}\" height=\"${rectSize}\" fill=\"url(#${typeCode})\" />`;\n                    if (link) {\n                        output = `<a href=\"${link}\">${output}</a>`;\n                    }\n                    return output;\n                }\n\n                function createSegments(sectionCircle, segments, strokeColor) {\n                    let percMult = 100 / segments.length;\n                    let r = $(sectionCircle).find('> circle').attr('r');\n                    let rectSize = r;\n                    let startAngle = 0;\n                    let perc = 0;\n                    let arcsEl = $(sectionCircle).find(\".arcs\");\n\n                    arcsEl.empty();\n\n                    if (segments.length > 1) {\n                        for (let s = 0; s < segments.length; s++) {\n                            perc += percMult;\n                            let endAngle = (Math.PI * 2) / (100 / perc);\n                            $(\"<path />\")\n                                .attr(\"d\", createSvgArc(0, 0, r, startAngle, endAngle * 2))\n                                .attr(\"stroke\", strokeColor)\n                                .attr(\"stroke-width\", \"6\")\n                                .attr(\"fill\", \"none\")\n                                //.attr(\"fill-opacity\", \"0.4\")\n                                .appendTo($(arcsEl));\n                            $(arcsEl).html($(arcsEl).html());\n                            startAngle += endAngle;\n                        }\n                    }\n\n                    switch (segments.length) {\n                        case 1: rectSize = r*1.3; break;\n                        case 2: rectSize = r/1.25; break;\n                        case 3: rectSize = r/1.5; break;\n                        case 4: rectSize = r/1.75; break;\n                        case 5: rectSize = r/1.75; break;\n                    }\n\n                    if (segments.length > 1) {\n                        for (let s = 0; s < segments.length; s++) {\n                            var angle = Math.PI / segments.length;\n                            var phi = Math.PI / (r) + angle * s * 2;\n                            phi += Math.PI / segments.length;\n\n                            var x = (r/2) * Math.cos(phi);\n                            var y = (r/2) * Math.sin(phi);\n\n                            if (segments.length === 5) {\n                                x = (r/1.75) * Math.cos(phi);\n                                y = (r/1.75) * Math.sin(phi);\n                            }\n\n                            // Rectangles start from the top left corner.\n                            // This code centers the rectangle.\n                            x-=rectSize / 2;\n                            y-=rectSize / 2;\n\n                            // Deal with divided by 2 nicer.\n                            if (segments.length === 2) {\n                                if (s === 1) {\n                                    y = - (rectSize + 20);\n                                } else {\n                                    y = 20;\n                                }\n                            }\n                            const typeCode = segments[s].typecode;\n                            const link = segments[s].link ? segments[s].link : null;\n\n                            $(imageHtml(x, y, rectSize, typeCode, link))\n                                .appendTo($(arcsEl));\n                            $(arcsEl).html($(arcsEl).html());\n                        }\n                    } else if (segments.length === 1) {\n                        const typeCode = segments[0].typecode;\n                        var x = -rectSize/2;\n                        var y = -rectSize/2;\n                        const link = segments[0].link ? segments[0].link : null;\n                        $(imageHtml(x, y, rectSize, typeCode, link))\n                            .appendTo($(arcsEl));\n                        $(arcsEl).html($(arcsEl).html());\n                    }\n                }\n            });\n        }\n    };\n\n});"],"file":"sectioncircle.min.js"}