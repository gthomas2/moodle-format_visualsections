{"version":3,"sources":["../src/sectioncircle.js"],"names":["define","$","applySegments","each","segments","data","progress","setProgress","createSegments","split","sectionCircle","perc","progCircle","find","radius","attr","dasharr","Math","PI","createSvgArc","x","y","r","startAngle","endAngle","s","largeArc","cos","sin","join","segData","percMult","length","rectSize","arcsEl","empty","appendTo","html","angle","phi"],"mappings":"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","sourcesContent":["define(['jquery'], function($) {\n    return {\n        applySegments: function() {\n            $(function() {\n\n                $('.sectionCircle').each(function() {\n                    var segments = $(this).data('segments');\n                    var progress = $(this).data('progress');\n                    setProgress(this, progress);\n                    createSegments(this, segments.split(','));\n                });\n\n                function setProgress(sectionCircle, perc) {\n                    var progCircle = $(sectionCircle).find('.progress');\n                    var radius = $(progCircle).attr('r');\n                    var dasharr = 2 * Math.PI * radius;\n                    var dashoffset = dasharr * (1 - (perc / 100));\n                    $(progCircle).attr('stroke-dasharray', dasharr)\n                        .attr('stroke-dashoffset', dashoffset);\n                }\n\n                function createSvgArc(x, y, r, startAngle, endAngle) {\n                    if (startAngle > endAngle) {\n                        var s = startAngle;\n                        startAngle = endAngle;\n                        endAngle = s;\n                    }\n                    if (endAngle - startAngle > Math.PI * 2) {\n                        endAngle = Math.PI * 1.99999;\n                    }\n\n                    var largeArc = endAngle - startAngle <= Math.PI ? 0 : 1;\n\n                    return [\n                        \"M\",\n                        x,\n                        y,\n                        \"L\",\n                        x + Math.cos(startAngle) * r,\n                        y - Math.sin(startAngle) * r,\n                        \"A\",\n                        r,\n                        r,\n                        0,\n                        largeArc,\n                        0,\n                        x + Math.cos(endAngle) * r,\n                        y - Math.sin(endAngle) * r,\n                        \"L\",\n                        x,\n                        y\n                    ].join(\" \") + \" Z\";\n                }\n\n                function createSegments(sectionCircle) {\n\n                    let segData = $(sectionCircle).data('segments');\n                    let segments = segData.split(',');\n                    let percMult = 100 / segments.length;\n                    let r = $(sectionCircle).find('> circle').attr('r');\n                    let rectSize = r;\n                    let startAngle = 0;\n                    let perc = 0;\n                    let arcsEl = $(sectionCircle).find(\".arcs\");\n\n                    arcsEl.empty();\n\n                    if (segments.length > 1) {\n                        for (let s = 0; s < segments.length; s++) {\n                            perc += percMult;\n                            let endAngle = (Math.PI * 2) / (100 / perc);\n                            $(\"<path />\")\n                                .attr(\"d\", createSvgArc(0, 0, r, startAngle, endAngle * 2))\n                                .attr(\"fill\", \"none\")\n                                .attr(\"stroke\", \"red\")\n                                .attr(\"stroke-width\", \"4\")\n                                .appendTo($(arcsEl));\n                            $(arcsEl).html($(arcsEl).html());\n                            startAngle += endAngle;\n                        }\n                    }\n\n                    switch (segments.length) {\n                        case 1: rectSize = r*1.5; break;\n                        case 2: rectSize = r/1.25; break;\n                        case 3: rectSize = r/1.5; break;\n                        case 4: rectSize = r/1.75; break;\n                        case 5: rectSize = r/1.75; break;\n                    }\n\n                    if (segments.length > 1) {\n                        for (let s = 0; s < segments.length; s++) {\n                            var angle = Math.PI / segments.length;\n                            var phi = Math.PI / (r) + angle * s * 2;\n                            phi += Math.PI / segments.length;\n\n                            var x = (r/2) * Math.cos(phi);\n                            var y = (r/2) * Math.sin(phi);\n\n                            if (segments.length === 5) {\n                                x = (r/1.75) * Math.cos(phi);\n                                y = (r/1.75) * Math.sin(phi);\n                            }\n\n                            // Rectangles start from the top left corner.\n                            // This code centers the rectangle.\n                            x-=rectSize / 2;\n                            y-=rectSize / 2;\n\n                            // Deal with divided by 2 nicer.\n                            if (segments.length === 2) {\n                                if (s === 1) {\n                                    y = 20;\n                                } else {\n                                    y = - (rectSize + 20);\n                                }\n                            }\n\n                            $(`<rect x=\"${x}\" y=\"${y}\" width=\"${rectSize}\" height=\"${rectSize}\" fill=\"url(#image)\" />`)\n                                .appendTo($(arcsEl));\n                            $(arcsEl).html($(arcsEl).html());\n                        }\n                    }else {\n                        var x = -rectSize/2;\n                        var y = -rectSize/2;\n                        $(`<rect x=\"${x}\" y=\"${y}\" width=\"${rectSize}\" height=\"${rectSize}\" fill=\"url(#image)\" />`)\n                            .appendTo($(arcsEl));\n                        $(arcsEl).html($(arcsEl).html());\n                    }\n\n\n\n                }\n\n\n\n\n\n            });\n\n        }\n    };\n\n});"],"file":"sectioncircle.min.js"}