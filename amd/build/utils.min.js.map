{"version":3,"sources":["../src/utils.js"],"names":["define","$","whenTrue","evaluateFunction","maxIterations","dfd","Deferred","i","iv","setInterval","clearInterval","reject","resolve","promise"],"mappings":"AAsBAA,OAAM,+BAAC,CAAC,QAAD,CAAD,CAAa,SAASC,CAAT,CAAY,CAC3B,MAAO,IAAI,WAAW,CASlB,KAAKC,QAAL,CAAgB,SAASC,CAAT,CAA2BC,CAA3B,CAA0C,CAEtDA,CAAa,CAAG,CAACA,CAAD,CAAiB,EAAjB,CAAsBA,CAAtC,CAFsD,GAIlDC,CAAAA,CAAG,CAAGJ,CAAC,CAACK,QAAF,EAJ4C,CAKlDC,CAAC,CAAG,CAL8C,CAOlDC,CAAE,CAAGC,WAAW,CAAC,UAAW,CAC5BF,CAAC,CAAG,CAACA,CAAD,CAAK,CAAL,CAASA,CAAC,CAAG,CAAjB,CACA,GAAIA,CAAC,CAAGH,CAAR,CAAuB,CACnBM,aAAa,CAACF,CAAD,CAAb,CACAH,CAAG,CAACM,MAAJ,EACH,CACD,GAAIR,CAAgB,EAApB,CAAwB,CACpBO,aAAa,CAACF,CAAD,CAAb,CACAH,CAAG,CAACO,OAAJ,EACH,CACJ,CAVmB,CAUjB,GAViB,CAPkC,CAmBtD,MAAOP,CAAAA,CAAG,CAACQ,OAAJ,EACV,CACJ,CACJ,CAhCK,CAAN","sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * Utility lib.\n *\n * @package   local_tlcore\n * @copyright Copyright (c) 2019 Titus Learning.\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n    return new function() {\n\n        /**\n         * When evaluateFunction returns true.\n         * @author Guy Thomas\n         * @param evaluateFunction\n         * @param maxIterations\n         * @returns {promise} jQuery promise\n         */\n        this.whenTrue = function(evaluateFunction, maxIterations) {\n\n            maxIterations = !maxIterations ? 10 : maxIterations;\n\n            var dfd = $.Deferred();\n            var i = 0;\n\n            var iv = setInterval(function() {\n                i = !i ? 1 : i + 1;\n                if (i > maxIterations) {\n                    clearInterval(iv);\n                    dfd.reject();\n                }\n                if (evaluateFunction()) {\n                    clearInterval(iv);\n                    dfd.resolve();\n                }\n            }, 200);\n\n            return dfd.promise();\n        };\n    };\n});\n"],"file":"utils.min.js"}